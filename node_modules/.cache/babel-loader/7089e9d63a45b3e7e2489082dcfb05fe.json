{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"C:\\\\Users\\\\fgb_0\\\\Downloads\\\\sitemap-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\nvar AbstractIterator = require('abstract-leveldown').AbstractIterator;\n\nvar inherits = require('inherits');\n\nfunction DeferredIterator(db, options) {\n  AbstractIterator.call(this, db);\n  this._options = options;\n  this._iterator = null;\n  this._operations = [];\n}\n\ninherits(DeferredIterator, AbstractIterator);\n\nDeferredIterator.prototype.setDb = function (db) {\n  var it = this._iterator = db.iterator(this._options);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = this._operations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var op = _step.value;\n      it[op.method].apply(it, _toConsumableArray(op.args));\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n};\n\nDeferredIterator.prototype._operation = function (method, args) {\n  var _this$_iterator;\n\n  if (this._iterator) return (_this$_iterator = this._iterator)[method].apply(_this$_iterator, _toConsumableArray(args));\n\n  this._operations.push({\n    method: method,\n    args: args\n  });\n};\n\nvar _arr = ['next', 'end'];\n\nvar _loop = function _loop() {\n  var m = _arr[_i];\n\n  DeferredIterator.prototype['_' + m] = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this._operation(m, args);\n  };\n};\n\nfor (var _i = 0; _i < _arr.length; _i++) {\n  _loop();\n} // Must defer seek() rather than _seek() because it requires db._serializeKey to be available\n\n\nDeferredIterator.prototype.seek = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  this._operation('seek', args);\n};\n\nmodule.exports = DeferredIterator;","map":null,"metadata":{},"sourceType":"script"}