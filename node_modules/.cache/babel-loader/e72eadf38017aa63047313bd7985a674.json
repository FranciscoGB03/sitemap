{"ast":null,"code":"'use strict';\n\nfunction createError(type, Proto) {\n  var Err = function Err(message, cause) {\n    if (typeof message === 'object' && message !== null) {\n      // Can be passed just a cause\n      cause = cause || message;\n      message = message.message || message.name;\n    }\n\n    message = message || '';\n    cause = cause || undefined; // If input is already of type, return as-is to keep its stack trace.\n    // Avoid instanceof, for when node_modules has multiple copies of level-errors.\n\n    if (typeof cause === 'object' && cause.type === type && cause.message === message) {\n      return cause;\n    }\n\n    Object.defineProperty(this, 'type', {\n      value: type,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(this, 'name', {\n      value: type,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(this, 'cause', {\n      value: cause,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(this, 'message', {\n      value: message,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    Error.call(this);\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, Err);\n    }\n  };\n\n  Err.prototype = new Proto();\n  return Err;\n}\n\nvar LevelUPError = createError('LevelUPError', Error);\nmodule.exports = {\n  LevelUPError: LevelUPError,\n  InitializationError: createError('InitializationError', LevelUPError),\n  OpenError: createError('OpenError', LevelUPError),\n  ReadError: createError('ReadError', LevelUPError),\n  WriteError: createError('WriteError', LevelUPError),\n  NotFoundError: createError('NotFoundError', LevelUPError),\n  EncodingError: createError('EncodingError', LevelUPError)\n};\nmodule.exports.NotFoundError.prototype.notFound = true;\nmodule.exports.NotFoundError.prototype.status = 404;","map":null,"metadata":{},"sourceType":"script"}