{"ast":null,"code":"'use strict';\n\nvar inherits = require('inherits');\n\nvar _require = require('readable-stream'),\n    Readable = _require.Readable;\n\nmodule.exports = ReadStream;\ninherits(ReadStream, Readable);\n\nfunction ReadStream(iterator, options) {\n  if (!(this instanceof ReadStream)) return new ReadStream(iterator, options);\n  options = options || {};\n  Readable.call(this, Object.assign({}, options, {\n    objectMode: true\n  }));\n  this._iterator = iterator;\n  this._options = options;\n  this.on('end', this.destroy.bind(this, null, null));\n}\n\nReadStream.prototype._read = function () {\n  var _this = this;\n\n  if (this.destroyed) return;\n\n  this._iterator.next(function (err, key, value) {\n    if (_this.destroyed) return;\n    if (err) return _this.destroy(err);\n\n    if (key === undefined && value === undefined) {\n      _this.push(null);\n    } else if (_this._options.keys !== false && _this._options.values === false) {\n      _this.push(key);\n    } else if (_this._options.keys === false && _this._options.values !== false) {\n      _this.push(value);\n    } else {\n      _this.push({\n        key: key,\n        value: value\n      });\n    }\n  });\n};\n\nReadStream.prototype._destroy = function (err, callback) {\n  this._iterator.end(function (err2) {\n    callback(err || err2);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}